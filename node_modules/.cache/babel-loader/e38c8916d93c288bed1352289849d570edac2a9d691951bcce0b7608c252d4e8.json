{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Darshan-Portfolio-CRA-FINAL-FULL\\\\src\\\\components\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = ({\n  folder,\n  title\n}) => {\n  _s();\n  const mediaCount = 50;\n  const [loadedMedia, setLoadedMedia] = useState([]);\n  const extensions = ['jpg', 'jpeg', 'mp4'];\n  const handleError = file => {\n    setLoadedMedia(prev => prev.filter(f => f !== file));\n  };\n\n  // Generate media paths\n  const allMedia = [];\n  for (let i = 1; i <= mediaCount; i++) {\n    for (const ext of extensions) {\n      const fileName = `${folder}_${String(i).padStart(2, '0')}.${ext}`;\n      allMedia.push(`/assets/${folder}/${fileName}`);\n    }\n  }\n\n  // Filter once: on first render or refetch\n  React.useEffect(() => {\n    setLoadedMedia(allMedia);\n  }, [folder]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      background: '#111',\n      color: 'white',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: '1.5rem'\n      },\n      children: [title, \" Gallery\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n        gap: '1.5rem'\n      },\n      children: loadedMedia.map((file, idx) => {\n        const ext = file.split('.').pop().toLowerCase();\n        return ext === 'mp4' ? /*#__PURE__*/_jsxDEV(\"video\", {\n          src: file,\n          controls: true,\n          preload: \"metadata\",\n          style: {\n            width: '100%',\n            borderRadius: '12px',\n            objectFit: 'cover'\n          },\n          onError: () => handleError(file)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file,\n          alt: `media-${idx}`,\n          style: {\n            width: '100%',\n            borderRadius: '12px',\n            objectFit: 'cover'\n          },\n          onError: () => handleError(file)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"fmZo5KMuI4q40Wj6omtbMu7DtFE=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Gallery","folder","title","_s","mediaCount","loadedMedia","setLoadedMedia","extensions","handleError","file","prev","filter","f","allMedia","i","ext","fileName","String","padStart","push","useEffect","style","padding","background","color","minHeight","children","marginBottom","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","map","idx","split","pop","toLowerCase","src","controls","preload","width","borderRadius","objectFit","onError","alt","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Darshan-Portfolio-CRA-FINAL-FULL/src/components/Gallery.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Gallery = ({ folder, title }) => {\n  const mediaCount = 50;\n  const [loadedMedia, setLoadedMedia] = useState([]);\n\n  const extensions = ['jpg', 'jpeg', 'mp4'];\n\n  const handleError = (file) => {\n    setLoadedMedia((prev) => prev.filter((f) => f !== file));\n  };\n\n  // Generate media paths\n  const allMedia = [];\n  for (let i = 1; i <= mediaCount; i++) {\n    for (const ext of extensions) {\n      const fileName = `${folder}_${String(i).padStart(2, '0')}.${ext}`;\n      allMedia.push(`/assets/${folder}/${fileName}`);\n    }\n  }\n\n  // Filter once: on first render or refetch\n  React.useEffect(() => {\n    setLoadedMedia(allMedia);\n  }, [folder]);\n\n  return (\n    <div style={{ padding: '2rem', background: '#111', color: 'white', minHeight: '100vh' }}>\n      <h2 style={{ marginBottom: '1.5rem' }}>{title} Gallery</h2>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n          gap: '1.5rem',\n        }}\n      >\n        {loadedMedia.map((file, idx) => {\n          const ext = file.split('.').pop().toLowerCase();\n\n          return ext === 'mp4' ? (\n            <video\n              key={idx}\n              src={file}\n              controls\n              preload=\"metadata\"\n              style={{\n                width: '100%',\n                borderRadius: '12px',\n                objectFit: 'cover',\n              }}\n              onError={() => handleError(file)}\n            />\n          ) : (\n            <img\n              key={idx}\n              src={file}\n              alt={`media-${idx}`}\n              style={{\n                width: '100%',\n                borderRadius: '12px',\n                objectFit: 'cover',\n              }}\n              onError={() => handleError(file)}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}